/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/portal/image-uploader.min.js":
/*!***************************************************!*\
  !*** ./resources/js/portal/image-uploader.min.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! Image Uploader - v1.2.3 - 26/11/2019
 * Copyright (c) 2019 Christian Bayer; Licensed MIT */
!function (e) {
  e.fn.imageUploader = function (t) {
    var n,
        i = {
      preloaded: [],
      imagesInputName: "images",
      preloadedInputName: "preloaded",
      label: "Drag & Drop files here or click to browse",
      extensions: [".jpg", ".jpeg", ".png", ".gif", ".svg"],
      mimes: ["image/jpeg", "image/png", "image/gif", "image/svg+xml"],
      maxSize: void 0,
      maxFiles: void 0
    },
        a = this,
        s = new DataTransfer();
    a.settings = {}, a.init = function () {
      a.settings = e.extend(a.settings, i, t), a.each(function (t, n) {
        var i = o();

        if (e(n).append(i), i.on("dragover", r.bind(i)), i.on("dragleave", r.bind(i)), i.on("drop", p.bind(i)), a.settings.preloaded.length) {
          i.addClass("has-files");

          var _e = i.find(".uploaded");

          for (var _t = 0; _t < a.settings.preloaded.length; _t++) {
            _e.append(l(a.settings.preloaded[_t].src, a.settings.preloaded[_t].id, !0));
          }
        }
      });
    };

    var o = function o() {
      var t = e("<div>", {
        "class": "image-uploader"
      });
      n = e("<input>", {
        type: "file",
        id: a.settings.imagesInputName + "-" + h(),
        name: a.settings.imagesInputName + "[]",
        accept: a.settings.extensions.join(","),
        multiple: ""
      }).appendTo(t);
      e("<div>", {
        "class": "uploaded"
      }).appendTo(t);
      var i = e("<div>", {
        "class": "upload-text"
      }).appendTo(t);
      e("<img>", {
        src: "/assets/icons/portal/ico_upload.png",
        "class": "upload-icon"
      }).appendTo(i), e("<span>", {
        text: a.settings.label
      }).appendTo(i);
      return t.on("click", function (e) {
        d(e), n.trigger("click");
      }), n.on("click", function (e) {
        e.stopPropagation();
      }), n.on("change", p.bind(t)), t;
    },
        d = function d(e) {
      e.preventDefault(), e.stopPropagation();
    },
        l = function l(t, i, o) {
      var l = e("<div>", {
        "class": "uploaded-image"
      }),
          r = (e("<img>", {
        src: t
      }).appendTo(l), e("<button>", {
        "class": "delete-image"
      }).appendTo(l));
      e("<img>", {
        src: "/assets/icons/portal/ico_clear.png",
        "class": "clear-icon"
      }).appendTo(r);

      if (o) {
        l.attr("data-preloaded", !0);
        e("<input>", {
          type: "hidden",
          name: a.settings.preloadedInputName + "[]",
          value: i
        }).appendTo(l);
      } else l.attr("data-index", i);

      return l.on("click", function (e) {
        d(e);
      }), r.on("click", function (t) {
        d(t);
        var o = l.parent();
        if (!0 === l.data("preloaded")) a.settings.preloaded = a.settings.preloaded.filter(function (e) {
          return e.id !== i;
        });else {
          var _t2 = parseInt(l.data("index"));

          o.find(".uploaded-image[data-index]").each(function (n, i) {
            n > _t2 && e(i).attr("data-index", n - 1);
          }), s.items.remove(_t2), n.prop("files", s.files);
        }
        l.remove(), o.children().length || o.parent().removeClass("has-files");
      }), l;
    },
        r = function r(t) {
      d(t), "dragover" === t.type ? e(this).addClass("drag-over") : e(this).removeClass("drag-over");
    },
        p = function p(t) {
      d(t);
      var i = e(this),
          o = Array.from(t.target.files || t.originalEvent.dataTransfer.files),
          l = [];
      e(o).each(function (e, t) {
        a.settings.extensions && !g(t) || a.settings.mimes && !c(t) || a.settings.maxSize && !f(t) || a.settings.maxFiles && !m(l.length, t) || l.push(t);
      }), l.length ? (i.removeClass("drag-over"), u(i, l)) : n.prop("files", s.files);
    },
        g = function g(e) {
      return !(a.settings.extensions.indexOf(e.name.replace(new RegExp("^.*\\."), ".")) < 0) || (alert("The file \"".concat(e.name, "\" does not match with the accepted file extensions: \"").concat(a.settings.extensions.join('", "'), "\"")), !1);
    },
        c = function c(e) {
      return !(a.settings.mimes.indexOf(e.type) < 0) || (alert("The file \"".concat(e.name, "\" does not match with the accepted mime types: \"").concat(a.settings.mimes.join('", "'), "\"")), !1);
    },
        f = function f(e) {
      return !(e.size > a.settings.maxSize) || (alert("The file \"".concat(e.name, "\" exceeds the maximum size of ").concat(a.settings.maxSize / 1024 / 1024, "Mb")), !1);
    },
        m = function m(e, t) {
      return !(e + s.items.length + a.settings.preloaded.length >= a.settings.maxFiles) || (alert("The file \"".concat(t.name, "\" could not be added because the limit of ").concat(a.settings.maxFiles, " files was reached")), !1);
    },
        u = function u(t, n) {
      t.addClass("has-files");
      var i = t.find(".uploaded"),
          a = t.find('input[type="file"]');
      e(n).each(function (e, t) {
        s.items.add(t), i.append(l(URL.createObjectURL(t), s.items.length - 1), !1);
      }), a.prop("files", s.files);
    },
        h = function h() {
      return Date.now() + Math.floor(100 * Math.random() + 1);
    };

    return this.init(), this;
  };
}(jQuery);

/***/ }),

/***/ 6:
/*!*********************************************************!*\
  !*** multi ./resources/js/portal/image-uploader.min.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /var/www/html/roober-backend/resources/js/portal/image-uploader.min.js */"./resources/js/portal/image-uploader.min.js");


/***/ })

/******/ });